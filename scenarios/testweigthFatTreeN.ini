[General]
network =DCN_FatTreeN
#network = Scenario_Small

output-vector-file = ${resultdir}/testWeightedNodeRandomfattree8/${configname}-${runnumber}.vec
output-scalar-file = ${resultdir}/testWeightedNodeRandomfattree8/${configname}-${runnumber}.sca

debug-on-errors = false
**.n = 4
#ARP should be allocated by controller, otherwise the arp broadcast would ruin the simulation.
sim-time-limit = 110s
**controller.ctrlApp.isArpOracle = true
#**controller.behavior = "ForwardingEXR"
**.controller.ofa_controller.port=6633
#**.ovs*.open_Flow_Processing.active2sleepTime = 0.0002s
**.open_Flow_Processing.active2sleepTime = 0.0002s
**.open_Flow_Processing.portpower=2w
**.open_Flow_Processing.switchpower=48w
**.serviceTime=0.000015s
**.sendCompletePacket = true
**.ofa_switch.connectPort = 6633
**.ofa_switch.connectAddress = "controller"
**.buffer.capacity = 10
**.ofa_switch.flow_timeout = 100s
**.etherMAC[*].promiscuous = true
#**.controller.ofa_controller.address = 

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000  # in routers

#*.configurator.networkAddress = "10.0.0.0"
*.configurator.networkAddress = "192.168.1.0"

**.podOVS*.tcp.mss = 800
**.coreOVS*.tcp.mss = 800
**.controller.tcp.mss = 800

#tcp
**.server*.numTcpApps = 2
**.server*.tcpApp[0].typename = "TCPAppOFbased"
**.server*.tcpApp[0].active = true
**.server*.tcpApp[0].localPort=-1
#2*n^3=1,16,54, 128,250,432...
**.server*.tcpApp[0].connectAddress = choose(int(intuniform(0,127)), moduleListByNedType("inet.nodes.inet.StandardHost"))


**.server*.tcpApp[0].connectPort=1000
**.server*.tcpApp[0].tOpen=0.5s
#**.H1.tcpApp[0].tSend = 1.1s
#**.H2.tcpApp[0].tSend = 1.11s
#**.H3.tcpApp[0].tSend = 1.12s
#**.H4.tcpApp[0].tSend = 1.13s
#**.H5.tcpApp[0].tSend = 1.14s
#**.H*.tcpApp[0].tSend= 10s
**.server*.tcpApp[0].tSend=1s+1s/poisson(128)
**.server*.tcpApp[0].sendBytes=exponential(6400000B)
#**.H*.tcpApp[0].sendBytes=6400000B
**.server*.tcpApp[0].tClose=200s

**.server*.tcpApp[1].typename ="TCPSinkOFbased"
**.server*.tcpApp[1].localPort=1000

[Config EXR-noweight]
description = "Forwarding with EX Routing"
**controller.behavior = "ForwardingEXR"
**controller.ctrlApp.isWeightedNode=false
**.server*.tcpApp[0].flowScheduleType=1
[Config EXR-weight]
description = "Forwarding with EX Routing"
**controller.behavior = "ForwardingEXR"
**controller.ctrlApp.isWeightedNode=true
**.server*.tcpApp[0].flowScheduleType=1  
[Config SP]
description = "Forwarding with SP Routing"
**controller.behavior = "Forwarding"
**.H*.tcpApp[0].flowScheduleType=2